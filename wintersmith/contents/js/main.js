// Generated by CoffeeScript 1.6.1
var bubbleParallax, firefox, getBottomScrollLimit, ieBrowser, setCollapsableContainers, setInitialScale, setParallax, setSmoothScroll, setWelcomeHeight, spyNavAnchors, swapFooterBlocks, touchDevice;

$(document).ready(function() {
  var collapsableContainers, languages, screenScale, viewportHeight;
  viewportHeight = window.innerHeight;
  screenScale = setInitialScale();
  setWelcomeHeight(viewportHeight, screenScale);
  setParallax($('.welcome').height());
  if (!touchDevice()) {
    spyNavAnchors(viewportHeight);
  }
  setSmoothScroll();
  $('.fotorama').fotorama();
  $('textarea').autosize();
  swapFooterBlocks();
  collapsableContainers = $('.proficiencies > ul > li, header > nav');
  setCollapsableContainers(collapsableContainers);
  languages = {
    "RUS": "/",
    "ENG": "/en/"
  };
  $('nav .language a').each(function(index, value) {
    if (languages[value.name] === window.location.pathname) {
      return $(this).addClass('active');
    }
  });
  if (window.PIE) {
    $('.fotorama__dot').each(function() {
      return PIE.attach(this);
    });
    return $('.fotorama').on('fotorama:showend', function(e, fotorama, extra) {
      return $('.fotorama__dot').each(function() {
        return PIE.attach(this);
      });
    });
  }
});

$(window).resize(function() {
  var screenScale, viewportHeight;
  viewportHeight = window.innerHeight;
  screenScale = setInitialScale();
  setWelcomeHeight(viewportHeight, 1);
  setParallax($('.welcome').height());
  if (!touchDevice()) {
    spyNavAnchors(viewportHeight);
  }
  setSmoothScroll();
  $('.fotorama').fotorama();
  $('textarea').autosize();
  return swapFooterBlocks();
});

setInitialScale = function() {
  var minWidth, scale, viewportWidth;
  minWidth = parseInt($('body').css('min-width'));
  viewportWidth = window.innerWidth;
  scale = 1.0;
  if ((minWidth != null) && viewportWidth < minWidth) {
    scale = viewportWidth / minWidth;
    $("meta[name=viewport]").attr("content", "'user-scalable=yes, maximum-scale=" + scale + ", initial-scale=" + scale + ", width=device-width");
    if ($(document).width() > $('body').width()) {
      $("meta[name=viewport]").attr("content", "'user-scalable=no, maximum-scale=1.0, minimum-scale=1.0, initial-scale=1.0, width=device-width");
    }
  }
  return scale;
};

setCollapsableContainers = function($containers) {
  var busyFlag, touchmoveFlag;
  busyFlag = false;
  touchmoveFlag = false;
  $containers.on('touchmove', 'h3', function() {
    return touchmoveFlag = true;
  });
  return $containers.on('touchend click', 'h3', function() {
    if (!busyFlag) {
      busyFlag = true;
      setTimeout(function() {
        return busyFlag = false;
      }, 400);
      if (!touchmoveFlag) {
        $(this).siblings('.small-screen-collapsable').toggleClass('collapsed');
      }
    }
    touchmoveFlag = false;
  });
};

setParallax = function(max_distance) {
  var back, frontBig, frontSmall, middle;
  $(document).off('scroll.bubbleParallax touchmove.bubbleParallax');
  back = ".welcome .bubbles .back";
  middle = ".welcome .bubbles .middle";
  frontBig = ".welcome .bubbles .front-big";
  frontSmall = ".welcome .bubbles .front-small";
  $([back, middle, frontBig, frontSmall].join(', ')).css({
    bottom: 0
  });
  bubbleParallax(back, 0.2, max_distance);
  bubbleParallax(middle, 0.5, max_distance);
  bubbleParallax(frontBig, 1.1, max_distance);
  return bubbleParallax(frontSmall, 1.5, max_distance);
};

getBottomScrollLimit = function() {
  return $(document).height() - $(window).height();
};

spyNavAnchors = function(window_height) {
  var $target, currentSectionPosition, intervalFlag, link, links, offset, sections, _i, _len,
    _this = this;
  $(window).off('scroll.scrollSpy');
  offset = window_height / 1.8;
  links = $('header nav a');
  sections = {};
  for (_i = 0, _len = links.length; _i < _len; _i++) {
    link = links[_i];
    $target = $(link.hash);
    if (($target != null) && $target.length !== 0) {
      sections[$target.offset().top] = $(link);
    }
  }
  currentSectionPosition = null;
  intervalFlag = false;
  $(window).on('scroll.scrollSpy', function(e) {
    var currentScroll, position;
    currentScroll = $(document).scrollTop() + offset;
    if (currentScroll < currentSectionPosition) {
      currentSectionPosition = null;
    }
    for (position in sections) {
      sections[position].removeClass('active');
      if (position < currentScroll) {
        if (((currentSectionPosition != null) && parseInt(position) >= currentSectionPosition) || (!currentSectionPosition)) {
          currentSectionPosition = parseInt(position);
        }
      }
    }
    if ((currentSectionPosition != null) && (sections[currentSectionPosition] != null)) {
      return sections[currentSectionPosition].addClass('active');
    }
  });
};

setSmoothScroll = function() {
  var $body, $header, animationTime, hero, inProgress, smoothScrollOffset, timeoutHandler, top, welcomeScroll, wsAnimationTimeout, wsTarget;
  if (ieBrowser()) {
    return;
  }
  $header = $('header');
  smoothScrollOffset = 0;
  if ($header.css('position') === 'fixed') {
    smoothScrollOffset = -$header.height();
    $('a.figures-scroll-up').attr('href', '#welcome');
  } else {
    $('a.figures-scroll-up').attr('href', '#header');
  }
  $('a').smoothScroll({
    offset: smoothScrollOffset,
    afterScroll: function() {
      return $(window).trigger("scroll");
    }
  });
  welcomeScroll = $('.welcome a.scroll-down');
  wsTarget = welcomeScroll[0].hash;
  wsAnimationTimeout = 0;
  welcomeScroll.smoothScroll({
    scrollTarget: this,
    beforeScroll: function() {
      $('.bubbles .back').css({
        bottom: $(window).height() * 0.2
      });
      $('.bubbles .middle').css({
        bottom: $(window).height() * 0.5
      });
      $('.bubbles .front-big').css({
        bottom: $(window).height() * 1.1
      });
      $('.bubbles .front-small').css({
        bottom: $(window).height() * 1.5
      });
      setTimeout(function() {
        $(document).off('scroll.bubbleParallax touchmove.bubbleParallax');
        return $.smoothScroll({
          scrollTarget: $(wsTarget),
          offset: smoothScrollOffset,
          speed: 1000,
          afterScroll: function() {
            if (!touchDevice()) {
              return setParallax($('.welcome').height());
            }
          }
        });
      }, wsAnimationTimeout);
      return false;
    }
  });
  $body = $('body, html');
  $body.off('mouswheel.smoothScroll');
  inProgress = false;
  animationTime = 150;
  top = $(this).scrollTop();
  $(window).on('scroll', function(e) {
    if (!inProgress) {
      return top = $(this).scrollTop();
    }
  });
  hero = $("#welcome .hero");
  timeoutHandler = null;
  if (firefox()) {
    return;
  }
  return $body.on('mousewheel.smoothScroll', function(event) {
    var delta, scrollLimit;
    $body.on('MozMousePixelScroll', function() {
      $body.off('mousewheel.smoothScroll');
      return console.log('aaaaaaa');
    });
    if (!inProgress) {
      scrollLimit = getBottomScrollLimit();
      $("#welcome .scroll-down").addClass('scrolled');
    }
    inProgress = true;
    console.log(event);
    delta = event.deltaFactor * event.deltaY;
    top -= delta;
    if (top > scrollLimit) {
      top = scrollLimit;
    } else if (top < 0) {
      top = 0;
    }
    $body.stop().animate({
      scrollTop: top
    }, animationTime, 'linear', function() {
      inProgress = false;
      clearTimeout(timeoutHandler);
      return timeoutHandler = setTimeout(function() {
        return $("#welcome .scroll-down").removeClass('scrolled');
      }, 1000);
    });
    return false;
  });
};

setWelcomeHeight = function(viewportHeight, scale) {
  var defaultMinHeight, headerHeight, multiplier, welcomeScreen;
  multiplier = 2;
  if (touchDevice() || ieBrowser()) {
    multiplier = 1;
  }
  welcomeScreen = $('body > .welcome');
  defaultMinHeight = parseInt(welcomeScreen.css('min-height'));
  if (viewportHeight > defaultMinHeight) {
    headerHeight = $('header').height();
    return welcomeScreen.css('height', (viewportHeight / scale - headerHeight) * multiplier);
  }
};

bubbleParallax = function(selector, ratio, max_distance) {
  var $document, $el;
  $el = $(selector);
  $document = $(document);
  if (ieBrowser()) {
    $document = $(window);
  }
  return $document.on('scroll.bubbleParallax touchmove.bubbleParallax', function() {
    var scrollbar_position;
    scrollbar_position = $(document).scrollTop();
    if ((0 < scrollbar_position && scrollbar_position < max_distance)) {
      return $el.css('bottom', scrollbar_position * ratio);
    }
  });
};

swapFooterBlocks = function() {
  var breakpoint, feedbackBlock, hireBlock, hireBlockHtml;
  if (ieBrowser()) {
    return;
  }
  breakpoint = $(".figures-menu").is(":visible");
  hireBlock = $('footer .hire');
  feedbackBlock = $('footer .feedback');
  if (breakpoint) {
    if (feedbackBlock.next('.hire').length === 0) {
      return;
    }
  }
  hireBlockHtml = hireBlock.wrap('<div/>').parent().html();
  if (breakpoint) {
    feedbackBlock.before(hireBlockHtml);
  } else {
    feedbackBlock.after(hireBlockHtml);
  }
  return hireBlock.unwrap().remove();
};

firefox = function() {
  return navigator.userAgent.toLowerCase().indexOf('firefox') > -1;
};

ieBrowser = function() {
  if ($("html").hasClass("lt-ie9")) {
    return true;
  }
  return false;
};

touchDevice = function() {
  if ($("html").hasClass("touch")) {
    return true;
  }
  return false;
};
